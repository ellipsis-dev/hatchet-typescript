{
  "name": "@hatchet-dev/typescript-sdk",
  "version": "0.20.0",
  "description": "Background task orchestration & visibility for developers",
  "types": "dist/index.d.ts",
  "files": [
    "*",
    "!**/*.test.js",
    "!**/*.test.d.ts",
    "!**/*.e2e.js",
    "!**/*.e2e.d.ts"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/hatchet-dev/hatchet-typescript.git"
  },
  "scripts": {
    "example:api": "npm run exec -- ./src/examples/api.ts",
    "build": "echo 'build hatchet sdk with `npm run tsc:build` to ensure it is not build during the publish step' && exit 0",
    "example:bulk-fanout-trigger": "npm run exec -- ./src/examples/bulk-fanout-trigger.ts",
    "example:bulk-fanout-worker": "npm run exec -- ./src/examples/bulk-fanout-worker.ts",
    "example:bulk-trigger": "npm run exec -- ./src/examples/bulk-trigger.ts",
    "dump-version": "node -e \"console.log('export const HATCHET_VERSION = \\'' + require('./package.json').version + '\\';');\" > src/version.ts",
    "eslint:check": "eslint \"{src,tests}/**/*.{ts,tsx,js}\"",
    "eslint:fix": "eslint \"{src,tests}/**/*.{ts,tsx,js}\" --fix",
    "example:example-event": "npm run exec -- ./src/examples/example-event.ts",
    "example:example-event-with-results": "npm run exec -- ./src/examples/example-event-with-results.ts",
    "example:rate-limit:events": "npm run exec -- ./src/examples/rate-limit/events.ts",
    "exec": "npx dotenv -- ts-node -r tsconfig-paths/register --project tsconfig.json",
    "example:concurrency:cancel-in-progress:concurrency-event": "npm run exec -- ./src/examples/concurrency/cancel-in-progress/concurrency-event.ts",
    "example:concurrency:group-round-robin:concurrency-event": "npm run exec -- ./src/examples/concurrency/group-round-robin/concurrency-event.ts",
    "generate": "pnpm run '/generate-.*/'",
    "generate-api": "npx --yes swagger-cli bundle ../oss/api-contracts/openapi/openapi.yaml --outfile openapi.yaml --type yaml && npx swagger-typescript-api -p openapi.yaml -o src/clients/rest/generated -n hatchet.ts --modular --axios",
    "generate-docs": "typedoc",
    "generate-protoc": "./generate-protoc.sh",
    "lint:check": "npm run eslint:check && npm run prettier:check",
    "lint:fix": "npm run eslint:fix && npm run prettier:fix",
    "example:stream-by-additional-meta": "npm run exec -- ./src/examples/stream-by-additional-meta.ts",
    "example:manual-trigger": "npm run exec -- ./src/examples/manual-trigger.ts",
    "prepare": "npm run build",
    "prepublish": "cp package.json dist/package.json;",
    "prettier:check": "prettier \"src/**/*.{ts,tsx}\" --list-different",
    "prettier:fix": "prettier \"src/**/*.{ts,tsx}\" --write",
    "publish:ci": "rm -rf ./dist && npm run dump-version && npm run tsc:build && npm run prepublish && cd dist && npm publish --access public --no-git-checks",
    "publish:ci:alpha": "rm -rf ./dist && npm run dump-version && npm run tsc:build && npm run prepublish && cd dist && npm publish --access public --no-git-checks --tag alpha",
    "test:e2e": "jest --testMatch='**/*.e2e.ts'",
    "test:unit": "jest --testMatch='**/*.test.ts'",
    "test:unit:watch": "jest --testMatch='**/*.test.ts' --watch",
    "example:sticky-trigger": "npm run exec -- ./src/examples/sticky-trigger.ts",
    "tsc:build": "npm run dump-version && tsc && resolve-tspaths",
    "example:affinity-workers": "npm run exec -- ./src/examples/affinity-workers.ts",
    "example:byo-logger": "npm run exec -- ./src/examples/byo-logger.ts",
    "example:concurrency:cancel-in-progress:concurrency-worker": "npm run exec -- ./src/examples/concurrency/cancel-in-progress/concurrency-worker.ts",
    "example:concurrency:group-round-robin:concurrency-worker-expression": "npm run exec -- ./src/examples/concurrency/group-round-robin/concurrency-worker-expression.ts",
    "example:dag-worker": "npm run exec -- ./src/examples/dag-worker.ts",
    "example:fanout-worker": "npm run exec -- ./src/examples/fanout-worker.ts",
    "example:logger": "npm run exec -- ./src/examples/logger.ts",
    "example:multi-workflow": "npm run exec -- ./src/examples/multi-workflow.ts",
    "example:namespaced-worker": "npm run exec -- ./src/examples/namespaced-worker.ts",
    "example:on-failure": "npm run exec -- ./src/examples/on-failure.ts",
    "example:playground": "npm run exec -- ./src/examples/playground.ts",
    "example:rate-limit:worker": "npm run exec -- ./src/examples/rate-limit/worker.ts",
    "example:retries-worker": "npm run exec -- ./src/examples/retries-worker.ts",
    "example:retries-with-backoff": "npm run exec -- ./src/examples/retries-with-backoff.ts",
    "example:simple-worker": "npm run exec -- ./src/examples/simple-worker.ts",
    "example:sticky-worker": "npm run exec -- ./src/examples/sticky-worker.ts",
    "example:sticky-worker-with-check": "npm run exec -- ./src/examples/sticky-worker-with-check.ts",
    "example:streaming-example": "npm run exec -- ./src/examples/streaming.ts"
  },
  "keywords": [],
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "@types/jest": "^29.5.11",
    "@types/node": "^22.0.0",
    "@typescript-eslint/eslint-plugin": "^6.4.0",
    "autoprefixer": "^10.4.16",
    "dotenv-cli": "^7.3.0",
    "eslint": "^8.56.0",
    "eslint-config-airbnb-typescript": "^18.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-config-standard-with-typescript": "^43.0.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^28.5.0",
    "eslint-plugin-n": "^15.0.0 || ^16.0.0 ",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "eslint-plugin-unused-imports": "^4.1.3",
    "grpc-tools": "^1.12.4",
    "jest": "^29.7.0",
    "pino": "^9.6.0",
    "prettier": "^3.1.1",
    "resolve-tspaths": "^0.8.17",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "ts-proto": "^2.0.2",
    "typedoc": "^0.27.1",
    "typedoc-plugin-markdown": "^4.0.2",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@bufbuild/protobuf": "^2.1.0",
    "@types/qs": "^6.9.11",
    "abort-controller-x": "^0.4.3",
    "axios": "^1.6.7",
    "long": "^5.2.3",
    "nice-grpc": "^2.1.7",
    "nice-grpc-common": "^2.0.2",
    "protobufjs": "^7.2.6",
    "qs": "^6.11.2",
    "yaml": "^2.3.4",
    "zod": "^3.22.4"
  }
}
